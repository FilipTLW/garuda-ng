---
name: 'Release management'
on:
  workflow_run:
    workflows: ['Run tests']
    types:
      - completed
    branches: '[0-9]+.[0-9]+.[0-9]+'
jobs:
  changelog:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Set git user info
        run: |
          git config user.name 'Temeraire'
          git config user.email 'actions@chaotic.cx'

      - name: Generate a complete changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: -v --no-exec --github-repo ${{ github.repository }}
        env:
          OUTPUT: CHANGELOG.md

      - name: Commit changelog
        run: |
          git checkout main
          git add CHANGELOG.md
          git commit -m "docs(changelog.md): update"

      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          ssh: true
          branch: ${{ github.ref }}

      - name: Generate a changelog for the latest release
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: -v --no-exec --github-repo ${{ github.repository }} --latest --strip header
        env:
          GITHUB_REPO: ${{ github.repository }}
          OUTPUT: CHANGES.md

      - name: Get current tag
        id: get_tag
        run: echo "version=$(git describe --abbrev=0 --tags)" >> "$GITHUB_ENV"

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGES.md
          fail_on_unmatched_files: true
          tag_name: ${{ steps.get_tag.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # https://github.com/pnpm/pnpm/issues/4937
      - name: Set up special NPM voodoo
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "@garudalinux:registry=https://registry.npmjs.org/" >> ~/.npmrc

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpx nx release publish core --access=public
